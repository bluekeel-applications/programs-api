service: programs-api

package:
  individually: true

plugins:
  - serverless-bundle
  - serverless-offline
  - serverless-dotenv-plugin

custom:
  allowedHeaders:
    - Accept
    - Content-Type
    - Content-Length
    - Authorization
    - Access-Control-Allow-Origin
    - X-Amz-Date
    - X-Api-Key
    - X-Amz-Security-Token
    - X-Amz-User-Agent
  stage: ${opt:stage, self:provider.stage}
  environment:
    DB: ${env:DB_CONNECTION_STRING}

provider:
  name: aws
  runtime: nodejs10.x
  memorySize: 128
  timeout: 10
  stage: dev
  region: us-east-1

functions:
# CREATE
  createDomain:
    handler: api/create.newDomain
    events:
      - http:
          path: api/program/add_domain
          method: post
          cors: true
  createEndpoint:
    handler: api/create.newEndpoint
    events:
      - http:
          path: api/program/new_endpoint
          method: post
          cors: true
# READ
  getAllEndpoints:
    handler: api/read.getAllEndpoints
    events:
      - http:
          path: api/program/all_endpoints
          method: get
          cors: true
  getProgramEndpoints:
    handler: api/read.getOneProgram
    events:
      - http:
          path: api/program/endpoints
          method: any
          cors: true
  getAllDomains:
    handler: api/read.getAllDomains
    events:
      - http:
          path: api/program/all_domains
          method: get
          cors: true
# UPDATE
  updateEndpoints:
    handler: api/update.endpoints
    events:
      - http:
          path: api/program/update_endpoints
          method: any
          cors: true
# DELETE
  deleteProgram:
    handler: api/delete.removeProgram
    events:
      - http:
          path: api/program/remove
          method: delete
          cors: true